#server.port = 8557
##spring.datasource.url=jdbc:mysql://localhost:3306/carServiceDatabase
spring.datasource.url = jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/test

logging.file.name = logging.log
logging.level.root=INFO
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR

#spring.datasource.username=prudhvi
#spring.datasource.password=password
#
#spring.data.jpa.repositories.bootstrap-mode=default
#spring.jpa.defer-datasource-initialization=true
#
#spring.jpa.show-sql=true
#spring.h2.console.enabled=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
#spring.datasource.url = jdbc:mysql://mysql-standalone:3306/carService-database
spring.datasource.username = prudhvi
spring.datasource.password = password

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

server.port=8557
